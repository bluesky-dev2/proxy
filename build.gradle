/*==========================================================================
Copyright since 2013, EPAM Systems

This file is part of Wilma.

Wilma is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Wilma is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Wilma.  If not, see <http://www.gnu.org/licenses/>.
===========================================================================*/

ext.componentDescription = "MITM Proxy of Wilma"

// Common local repository info
ext.myLocalRepository='file://C:/tmp/myRepo/'
ext.wilmaVersion=2.0

if ( hasProperty('localRepository') ) {
    myLocalRepository = "${project.ext.localRepository}"
}

group = 'com.epam.mitm'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'checkstyle'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'jacoco'

version = "0.2-beta-wilma-" + "$wilmaVersion"+'.'+"$buildNumber"

repositories {
    jcenter()
    maven { url "https://repo.maven.apache.org/maven2" }
    maven { url "${myLocalRepository}" }
    maven { url "https://repository.mulesoft.org/nexus/content/repositories/public/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

// Source and target info
sourceCompatibility = 1.8
targetCompatibility = 1.8

task sourceZip(type: Zip) {
    from 'src'
    baseName = "$componentName"
    classifier 'sources'
    extension 'jar'
}

checkstyle.toolVersion = '5.6'
checkstyle.ignoreFailures = true
checkstyle.configFile = file("$rootProject.rootDir/config/checkstyle/checkstyle.xml")
checkstyle.configProperties = ['samedir' : "$rootProject.rootDir/config/checkstyle"]

compileJava {options.encoding = "UTF-8"}

jacoco {
    toolVersion = "0.8.2"
}
jacocoTestReport {
    reports {
        xml.enabled true
    }
}
test.finalizedBy jacocoTestReport

dependencies {
    compile group: 'org.slf4j', name: 'slf4j-jdk14', version:'1.7.12'
    compile group: 'org.codehaus.jackson', name: 'jackson-core-asl', version:'1.7.1'
    compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version:'1.7.1'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version:'4.5.12'
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version:'4.5.12'
    compile group: 'org.apache.commons', name: 'commons-io', version:'1.3.2'
    compile group: 'net.sf.jopt-simple', name: 'jopt-simple', version:'3.2'
    compile group: 'org.apache.ant', name: 'ant', version:'1.9.4'
    compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version:'1.47'
    compile group: 'org.eclipse.jetty', name: 'jetty-server', version:'7.4.5.v20110725'
    compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version:'7.4.5.v20110725'
    compile group: 'dnsjava', name: 'dnsjava', version: '3.3.1'
    testCompile group: 'junit', name: 'junit', version:'4.12'
    testCompile group: 'com.google.guava', name: 'guava', version: '29.0-jre'
    testCompile group: 'org.mockito', name: 'mockito-all', version:'1.9.5'
    testCompile (group: 'io.netty', name: 'netty-all', version: '4.1.51.Final')
    testCompile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.4.31.v20200723'
    testCompile(group: 'org.testng', name: 'testng', version:'6.8.5') {
        exclude(module: 'junit')
    }
}

jar {
    manifest.attributes( 'provider': 'gradle')
    manifest.attributes( 'Implementation-Title': "$componentDescription - V$version")
    archiveName = "$componentName-$version"+'.jar'
}

task copyJarToDistributions (type: Copy) {
    dependsOn(sourceZip)
    from("$buildDir/libs/")
	into("$buildDir/distributions")
}

task createPom {
    doLast {
        pom {
        }.writeTo("$buildDir/distributions/$componentName-${version}.pom")
    }
}
createPom.dependsOn(copyJarToDistributions)

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "${myLocalRepository}")
        }
    }
}